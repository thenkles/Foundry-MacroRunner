# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: JesseTG/rm@v1.0.0
        with:
          # The file path to remove
          path: .git
          
      - uses: JesseTG/rm@v1.0.0
        with:
          # The file path to remove
          path: .github
          
      - name: Git Version
        # You may pin to the exact commit or the version.
        # uses: codacy/git-version@fa06788276d7492a2af01662649696d249ecf4cb
        uses: codacy/git-version@2.4.0
        with:
          # The name of the release branch
          release-branch: main
          # The name of the dev branch
          dev-branch: dev
          # The prefix to use in the version
          #prefix: # optional
          # The paths to be used to calculate changes (comma-separated)
          #log-paths: # optional, default is ./

      #- uses: nickatnight/releases-action@v2
        #env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        #with:
          # Name of branch to release from
          #branch: main
          # Name of the release
          #name: Release name
          # Message for the release
          #message: Release message
          # Draft or naw?
          #draft: # optional, default is false
          # Pre-release or naw
          #prerelease: # optional, default is false
          # Name of tag
          #tag: v1.1.1
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./mosule.json
          asset_name: module.json
          asset_content_type: application/zip
